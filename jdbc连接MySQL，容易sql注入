# Java
/*
不足之处：没有安全性,容易Sql注入（SQL）注入是一种可执行恶意Sql语句的注入攻击。
*/
import java.sql.*;
public class JDBC {
    public static void main(String[] args) {
        Connection conn = null;
        Statement stat = null;
        ResultSet rs = null;
        try {
            //1.注册驱动
            /*
            //方法一: DriverManager.registerDriver(new com.mysql.cj.jdbc.Driver());
            //方法二: Class.forName("com.mysql.cj.jdbc.Driver");
             */
            Class.forName("com.mysql.cj.jdbc.Driver");
            //2.获取数据库连接
            conn = DriverManager.getConnection("jbdc:mysql://127.0.0.1:8080/jdbc", "root", "123123");
            //3.获取数据库操作对象
            stat = conn.createStatement();
            //4.执行SQL语句
            String sql = "SELECT name from users where id = 1";
            rs = stat.executeQuery(sql);
            //5.查询结果集
            while (rs.next()) {
                int id = rs.getInt(1); //在jdbc中索引从1开始
                System.out.println(id);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            //6.关闭资源
            if (rs != null) {
                try {
                    rs.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            if (stat != null) {
                try {
                    stat.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
                if (conn != null) {
                    try {
                        conn.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
        }
    }
}
